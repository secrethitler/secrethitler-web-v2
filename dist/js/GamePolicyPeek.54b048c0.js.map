{"version":3,"sources":["webpack:///./src/utils/mergeDefaultParams.ts","webpack:///./src/assets/policy_liberal.jpg","webpack:///./src/views/GamePolicyPeek.vue?e942","webpack:///./src/api/policy/peek.ts","webpack:///./src/actions/peekPolicies.ts","webpack:///./src/views/GamePolicyPeek.vue","webpack:///./src/views/GamePolicyPeek.vue?3173","webpack:///./src/views/GamePolicyPeek.vue?5323","webpack:///./src/assets/policy_fascist.jpg","webpack:///./src/types/game.ts","webpack:///./src/utils/navigateTo.ts"],"names":["userId","getters","channelName","module","exports","render","_vm","this","_h","$createElement","_c","_self","_v","staticClass","policies","length","showing","on","getPeekedPolicies","_e","_l","policy","index","key","Policy","Liberal","attrs","Fascist","goBack","staticRenderFns","params","mergeDefaultParams","http","get","peekPolicies","peek","data","store","commit","SET_PEEKED_POLICIES","$gtag","event","event_category","event_label","$store","navigateTo","GameInfo","activeRound","secret","policyPeek","computed","component","Role","Party","availableWhenDead","GameIsKilled","GameWon","route","isDead","includes","push","name","id","SET_CURRENT_ACTION"],"mappings":"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","file":"js/GamePolicyPeek.54b048c0.js","sourcesContent":["import store from '@/store';\nimport { UserID, ChannelName } from '@/types/game';\n\nexport default function (): {\n  userId: UserID,\n  channelName: ChannelName\n  } {\n  return {\n    userId: store.getters.userId,\n    channelName: store.getters.channelName,\n  };\n}\n","module.exports = __webpack_public_path__ + \"img/policy_liberal.5217f3f3.jpg\";","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('page-title',[_vm._v(\"Policy Peek\")]),_c('div',{staticClass:\"container flex justify-center\"},[_c('div',{staticClass:\"lg:w-1/2\"},[_c('h3',{staticClass:\"font-serif text-2xl mb-4\"},[_vm._v(\"You may look at the top 3 policies from the card pile!\")]),(_vm.policies.length === 0 && _vm.showing === false)?_c('div',{staticClass:\"flex justify-center\"},[_c('button',{staticClass:\"btn\",on:{\"click\":_vm.getPeekedPolicies}},[_vm._v(\"Show Policies\")])]):_vm._e(),(_vm.policies.length > 0)?_c('div',{staticClass:\"flex\"},_vm._l((_vm.policies),function(policy,index){return _c('div',{key:index,staticClass:\"px-2 w-full lg:w-1/3 mb-4\"},[(policy === _vm.Policy.Liberal)?_c('div',[_c('img',{attrs:{\"src\":require(\"../assets/policy_liberal.jpg\"),\"alt\":\"Liberal Policy\"}})]):_vm._e(),(policy === _vm.Policy.Fascist)?_c('div',[_c('img',{attrs:{\"src\":require(\"../assets/policy_fascist.jpg\"),\"alt\":\"Fascist Policy\"}})]):_vm._e()])}),0):_vm._e(),(_vm.policies.length > 0)?_c('div',{staticClass:\"flex justify-center py-4\"},[_c('button',{staticClass:\"btn shadow\",on:{\"click\":_vm.goBack}},[_vm._v(\"Back\")])]):_vm._e()])])],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","import http from '@/plugins/http';\nimport { PolicyPeekRequest, PolicyPeekResponse } from '@/types/http';\nimport mergeDefaultParams from '@/utils/mergeDefaultParams';\n\nexport default function () {\n  const params: PolicyPeekRequest = {\n    ...mergeDefaultParams(),\n  };\n\n  return http.get<PolicyPeekResponse>('/policy/peek', { params });\n}\n","import peek from '@/api/policy/peek';\nimport store from '@/store';\nimport { mutations } from '@/store/game';\n\nexport default async function peekPolicies() {\n  const { data } = await peek();\n\n  store.commit(mutations.SET_PEEKED_POLICIES, data.policies);\n}\n","\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport Vue from 'vue';\nimport Component from 'vue-class-component';\nimport { mapGetters } from 'vuex';\nimport peekPolicies from '../actions/peekPolicies';\nimport { Round, Policy } from '../types/game';\nimport navigateTo from '../utils/navigateTo';\nimport Route from '../types/route';\n\n@Component({\n  computed: mapGetters(['activeRound']),\n})\nexport default class GamePolicyPeek extends Vue {\n  showing = false;\n\n  activeRound!: Round;\n\n  Policy = Policy;\n\n  get policies(): Policy[] {\n    return this.activeRound.secret.policyPeek;\n  }\n\n  async getPeekedPolicies() {\n    this.showing = true;\n    try {\n      await peekPolicies();\n\n      this.$gtag.event('game', {\n        event_category: 'policy-peek',\n        event_label: this.$store.getters.channelName,\n      });\n    } catch (e) {\n      this.showing = false;\n    }\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  goBack() {\n    navigateTo(Route.GameInfo);\n  }\n}\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--14-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/ts-loader/index.js??ref--14-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./GamePolicyPeek.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--14-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/ts-loader/index.js??ref--14-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./GamePolicyPeek.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./GamePolicyPeek.vue?vue&type=template&id=4fc19550&\"\nimport script from \"./GamePolicyPeek.vue?vue&type=script&lang=ts&\"\nexport * from \"./GamePolicyPeek.vue?vue&type=script&lang=ts&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","module.exports = __webpack_public_path__ + \"img/policy_fascist.60739294.jpg\";","import Route from './route';\n\nexport type UserID = number;\n\nexport type Member = {\n  userId: UserID\n  userName: string,\n  roleName?: Role,\n  isCreator?: boolean\n}\n\nexport type PusherMember = {\n  id: string,\n  info: {\n    isChannelCreator: boolean,\n    userName: string\n  }\n}\n\nexport type ChannelName = string;\n\nexport enum Role {\n  Hitler = 'secret hitler',\n  Fascist = 'fascist',\n  Liberal = 'liberal',\n}\n\nexport enum Policy {\n  Fascist = 'fascist',\n  Liberal = 'liberal',\n}\n\nexport enum Party {\n  Fascist = 'fascist',\n  Liberal = 'liberal',\n}\n\nexport type Vote = {\n  userId: UserID,\n  votedYes: boolean\n}\n\ntype Secret = {\n  electable: UserID[],\n  presidentPolicies: Policy[],\n  chancellorPolicies: Policy[],\n  policyPeek: Policy[],\n  vetoPossible: boolean\n}\n\nexport type Round = {\n  presidentId: UserID,\n  chancellorId: null | UserID,\n  chancellorElected: boolean,\n  enactedPolicy: false | Policy,\n  votes: Vote[],\n  secret: Secret\n}\n\nexport type GameState = {\n  token?: string,\n  userId?: UserID,\n  creatorId?: UserID,\n  channelName?: ChannelName,\n  roleName?: Role,\n  currentAction: Route,\n\n  activeRound: number,\n  electionTracker: number,\n  gameOver: false | {\n    party: Party,\n    reason: string\n  },\n\n  members: Member[],\n  connectedMembers: Member[],\n  partyMembers?: Member[],\n  rounds: Round[],\n  killed: UserID[],\n\n  running: boolean\n}\n\nexport type GameGetters = {\n  userId?: UserID,\n  token?: string,\n  channelName?: ChannelName,\n  members?: Member[],\n  partyMembers?: Member[],\n  rounds?: Round[],\n  roleName?: Role,\n  electionTracker?: number,\n\n  you?: Member,\n  creator?: Member,\n  isCreator?: boolean,\n  isElected?: boolean,\n  activeRound?: Round,\n  president?: Member,\n  chancellor?: Member,\n}\n\nexport type StoreRootState = {};\n","import Route from '@/types/route';\nimport router from '@/router';\nimport store from '@/store';\nimport { mutations } from '@/store/game';\n\nconst availableWhenDead = [\n  Route.GameIsKilled,\n  Route.GameWon,\n  Route.GameInfo,\n];\n\nexport default function (route: Route) {\n  // If the current player is dead, we don't want to redirect to the action,\n  // unless the game is over, or he wants to see the info screen.\n  if (store.getters.isDead && !availableWhenDead.includes(route)) {\n    return;\n  }\n\n  router.push({ name: route, params: { id: store.getters.channelName } });\n\n  store.commit(mutations.SET_CURRENT_ACTION, route);\n}\n"],"sourceRoot":""}