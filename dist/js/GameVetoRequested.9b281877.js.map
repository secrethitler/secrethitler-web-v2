{"version":3,"sources":["webpack:///./src/utils/mergeDefaultParams.ts","webpack:///./src/views/GameVetoRequested.vue?2ed5","webpack:///./src/api/round/veto.ts","webpack:///./src/actions/acceptVeto.ts","webpack:///./src/views/GameVetoRequested.vue","webpack:///./src/views/GameVetoRequested.vue?845b","webpack:///./src/views/GameVetoRequested.vue?4ddb","webpack:///./src/utils/navigateTo.ts"],"names":["userId","getters","channelName","render","_vm","this","_h","$createElement","_c","_self","_v","staticClass","_s","chancellor","userName","on","$event","accept","staticRenderFns","accepted","params","mergeDefaultParams","http","post","veto","navigateTo","GameInfo","acceptVeto","computed","component","availableWhenDead","GameIsKilled","GameWon","route","isDead","includes","push","name","id","commit","SET_CURRENT_ACTION"],"mappings":"mHAAA,gBAGc,kBAIZ,MAAO,CACLA,OAAQ,OAAMC,QAAQD,OACtBE,YAAa,OAAMD,QAAQC,e,yCCT/B,IAAIC,EAAS,WAAa,IAAIC,EAAIC,KAASC,EAAGF,EAAIG,eAAmBC,EAAGJ,EAAIK,MAAMD,IAAIF,EAAG,OAAOE,EAAG,MAAM,CAACA,EAAG,aAAa,CAACJ,EAAIM,GAAG,oBAAoBF,EAAG,MAAM,CAACG,YAAY,iCAAiC,CAACH,EAAG,MAAM,CAACG,YAAY,YAAY,CAACH,EAAG,KAAK,CAACG,YAAY,4BAA4B,CAACP,EAAIM,GAAGN,EAAIQ,GAAGR,EAAIS,WAAWC,UAAU,4BAA4BN,EAAG,IAAI,CAACJ,EAAIM,GAAG,0DAA0DF,EAAG,MAAM,CAACG,YAAY,mBAAmB,CAACH,EAAG,MAAM,CAACG,YAAY,QAAQ,CAACH,EAAG,SAAS,CAACG,YAAY,aAAaI,GAAG,CAAC,MAAQ,SAASC,GAAQ,OAAOZ,EAAIa,QAAO,MAAS,CAACb,EAAIM,GAAG,mBAAmBF,EAAG,MAAM,CAACG,YAAY,QAAQ,CAACH,EAAG,SAAS,CAACG,YAAY,aAAaI,GAAG,CAAC,MAAQ,SAASC,GAAQ,OAAOZ,EAAIa,QAAO,MAAU,CAACb,EAAIM,GAAG,2BAA2B,IAC9wBQ,EAAkB,G,4JCGR,WAAWC,GACvB,IAAMC,EAAM,gBACVD,YACG,OAAAE,EAAA,SAGL,OAAOC,EAAA,KAAKC,KAAwB,cAAeH,I,wBCNtC,cAAf,gC,8DAAe,WAAgBD,GAAhB,iGACPK,EAAKL,GADE,OAGb,OAAAM,EAAA,MAAW,OAAMC,UAHJ,2C,wBC4Bf,IAAqB,EAArB,iLAISP,GACLQ,EAAWR,OALf,GAA+C,QAA1B,EAAiB,gBAHrC,eAAU,CACTS,SAAU,eAAW,CAAC,kBAEH,WChCuX,I,YCOxYC,EAAY,eACd,EACA1B,EACAe,GACA,EACA,KACA,KACA,MAIa,aAAAW,E,mHCbTC,EAAoB,CACxB,OAAMC,aACN,OAAMC,QACN,OAAMN,UAGM,gBAAWO,GAGnB,OAAMhC,QAAQiC,SAAWJ,EAAkBK,SAASF,KAIxD,OAAOG,KAAK,CAAEC,KAAMJ,EAAOb,OAAQ,CAAEkB,GAAI,OAAMrC,QAAQC,eAEvD,OAAMqC,OAAO,OAAUC,mBAAoBP","file":"js/GameVetoRequested.9b281877.js","sourcesContent":["import store from '@/store';\nimport { UserID, ChannelName } from '@/types/game';\n\nexport default function (): {\n  userId: UserID,\n  channelName: ChannelName\n  } {\n  return {\n    userId: store.getters.userId,\n    channelName: store.getters.channelName,\n  };\n}\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('page-title',[_vm._v(\"Veto requested\")]),_c('div',{staticClass:\"container flex justify-center\"},[_c('div',{staticClass:\"lg:w-1/2\"},[_c('h3',{staticClass:\"font-serif text-2xl mb-4\"},[_vm._v(_vm._s(_vm.chancellor.userName)+\" has requested a veto!\")]),_c('p',[_vm._v(\"If you accept, no policy will be enacted this round.\")]),_c('div',{staticClass:\"flex -mx-4 mt-8\"},[_c('div',{staticClass:\"px-4\"},[_c('button',{staticClass:\"btn shadow\",on:{\"click\":function($event){return _vm.accept(true)}}},[_vm._v(\"Accept Veto\")])]),_c('div',{staticClass:\"px-4\"},[_c('button',{staticClass:\"btn shadow\",on:{\"click\":function($event){return _vm.accept(false)}}},[_vm._v(\"Decline Veto\")])])])])])],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","import http from '@/plugins/http';\nimport { RoundVetoRequest, RoundVetoResponse } from '@/types/http';\nimport mergeDefaultParams from '@/utils/mergeDefaultParams';\n\nexport default function (accepted: boolean) {\n  const params: RoundVetoRequest = {\n    accepted,\n    ...mergeDefaultParams(),\n  };\n\n  return http.post<RoundVetoResponse>('/round/veto', params);\n}\n","import veto from '@/api/round/veto';\nimport navigateTo from '@/utils/navigateTo';\nimport Route from '@/types/route';\n\nexport default async function (accepted: boolean) {\n  await veto(accepted);\n\n  navigateTo(Route.GameInfo);\n}\n","\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport Vue from 'vue';\nimport Component from 'vue-class-component';\nimport { mapGetters } from 'vuex';\nimport acceptVeto from '@/actions/acceptVeto';\nimport { Member } from '../types/game';\n\n@Component({\n  computed: mapGetters(['chancellor']),\n})\nexport default class GameVetoRequested extends Vue {\n  chancellor!: Member;\n\n  // eslint-disable-next-line class-methods-use-this\n  accept(accepted: boolean) {\n    acceptVeto(accepted);\n  }\n}\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--14-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/ts-loader/index.js??ref--14-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./GameVetoRequested.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--14-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/ts-loader/index.js??ref--14-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./GameVetoRequested.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./GameVetoRequested.vue?vue&type=template&id=7c148835&\"\nimport script from \"./GameVetoRequested.vue?vue&type=script&lang=ts&\"\nexport * from \"./GameVetoRequested.vue?vue&type=script&lang=ts&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","import Route from '@/types/route';\nimport router from '@/router';\nimport store from '@/store';\nimport { mutations } from '@/store/game';\n\nconst availableWhenDead = [\n  Route.GameIsKilled,\n  Route.GameWon,\n  Route.GameInfo,\n];\n\nexport default function (route: Route) {\n  // If the current player is dead, we don't want to redirect to the action,\n  // unless the game is over, or he wants to see the info screen.\n  if (store.getters.isDead && !availableWhenDead.includes(route)) {\n    return;\n  }\n\n  router.push({ name: route, params: { id: store.getters.channelName } });\n\n  store.commit(mutations.SET_CURRENT_ACTION, route);\n}\n"],"sourceRoot":""}