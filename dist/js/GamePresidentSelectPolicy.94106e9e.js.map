{"version":3,"sources":["webpack:///./src/utils/mergeDefaultParams.ts","webpack:///./src/assets/policy_liberal.jpg","webpack:///./src/views/GamePresidentSelectPolicy.vue?b03f","webpack:///./src/api/policy/presidentPick.ts","webpack:///./src/actions/presidentPolicyPick.ts","webpack:///./src/views/GamePresidentSelectPolicy.vue","webpack:///./src/views/GamePresidentSelectPolicy.vue?57bd","webpack:///./src/views/GamePresidentSelectPolicy.vue?a237","webpack:///./src/assets/policy_fascist.jpg","webpack:///./src/types/game.ts","webpack:///./src/utils/navigateTo.ts"],"names":["userId","getters","channelName","module","exports","render","_vm","this","_h","$createElement","_c","_self","_v","staticClass","_s","chancellor","userName","policies","length","class","discarding","_l","policy","index","key","Policy","Liberal","on","$event","discard","attrs","_e","Fascist","staticRenderFns","discardedPolicy","params","mergeDefaultParams","http","post","presidentPolicyPick","presidentPick","data","navigateTo","GameInfo","$gtag","event","event_category","event_label","$store","activeRound","secret","presidentPolicies","computed","component","Role","Party","availableWhenDead","GameIsKilled","GameWon","route","isDead","includes","push","name","id","commit","SET_CURRENT_ACTION"],"mappings":"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","file":"js/GamePresidentSelectPolicy.94106e9e.js","sourcesContent":["import store from '@/store';\nimport { UserID, ChannelName } from '@/types/game';\n\nexport default function (): {\n  userId: UserID,\n  channelName: ChannelName\n  } {\n  return {\n    userId: store.getters.userId,\n    channelName: store.getters.channelName,\n  };\n}\n","module.exports = __webpack_public_path__ + \"img/policy_liberal.5217f3f3.jpg\";","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('page-title',[_vm._v(\"Discard Policy\")]),_c('div',{staticClass:\"container flex justify-center\"},[_c('div',{staticClass:\"lg:w-1/2\"},[_c('div',{staticClass:\"mb-4\"},[_c('h3',{staticClass:\"font-serif text-2xl mb-4\"},[_vm._v(\"Select a policy to discard.\")]),_c('p',[_vm._v(\"The 2 remaining policies will be presented to the elected chancellor (\"+_vm._s(_vm.chancellor.userName)+\").\")])]),(_vm.policies.length > 0)?_c('div',{staticClass:\"flex\",class:{ 'pointer-events-none': _vm.discarding, 'opacity-50': _vm.discarding }},_vm._l((_vm.policies),function(policy,index){return _c('div',{key:index,staticClass:\"px-2 w-full lg:w-1/3\"},[(policy == _vm.Policy.Liberal)?_c('div',{on:{\"click\":function($event){return _vm.discard(policy)}}},[_c('img',{attrs:{\"src\":require(\"@/assets/policy_liberal.jpg\"),\"alt\":\"Liberal Policy\"}})]):_vm._e(),(policy == _vm.Policy.Fascist)?_c('div',{on:{\"click\":function($event){return _vm.discard(policy)}}},[_c('img',{attrs:{\"src\":require(\"@/assets/policy_fascist.jpg\"),\"alt\":\"Fascist Policy\"}})]):_vm._e()])}),0):_vm._e()])])],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","import http from '@/plugins/http';\nimport { PolicyPresidentPickRequest, PolicyPresidentPickResponse } from '@/types/http';\nimport { Policy } from '@/types/game';\nimport mergeDefaultParams from '@/utils/mergeDefaultParams';\n\nexport default function (discardedPolicy: Policy) {\n  const params: PolicyPresidentPickRequest = {\n    discardedPolicy,\n    ...mergeDefaultParams(),\n  };\n\n  return http.post<PolicyPresidentPickResponse>('/policy/president-pick', params);\n}\n","import { Policy } from '@/types/game';\nimport presidentPick from '@/api/policy/presidentPick';\nimport navigateTo from '@/utils/navigateTo';\nimport Route from '@/types/route';\n\nexport default async function presidentPolicyPick(discardedPolicy: Policy) {\n  const { data } = await presidentPick(discardedPolicy);\n\n  navigateTo(Route.GameInfo);\n}\n","\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport Vue from 'vue';\nimport Component from 'vue-class-component';\nimport { mapGetters } from 'vuex';\nimport { Policy, Round } from '@/types/game';\nimport presidentPolicyPick from '@/actions/presidentPolicyPick';\n\ntype Data = {\n  discarding: boolean;\n  Policy: typeof Policy;\n};\n\n@Component({\n  computed: mapGetters(['chancellor', 'members', 'activeRound']),\n})\nexport default class GamePresidentSelectPolicy extends Vue {\n  discarding = false;\n\n  Policy = Policy;\n\n  activeRound!: Round;\n\n  get policies() {\n    return this.activeRound.secret.presidentPolicies;\n  }\n\n  async discard(policy: Policy) {\n    this.discarding = true;\n\n    try {\n      await presidentPolicyPick(policy);\n\n      this.$gtag.event('game', {\n        event_category: 'president-pick-policy',\n        event_label: this.$store.getters.channelName,\n      });\n    } catch (e) {\n      this.discarding = false;\n    }\n  }\n}\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--14-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/ts-loader/index.js??ref--14-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./GamePresidentSelectPolicy.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--14-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/ts-loader/index.js??ref--14-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./GamePresidentSelectPolicy.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./GamePresidentSelectPolicy.vue?vue&type=template&id=02cecf8b&\"\nimport script from \"./GamePresidentSelectPolicy.vue?vue&type=script&lang=ts&\"\nexport * from \"./GamePresidentSelectPolicy.vue?vue&type=script&lang=ts&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","module.exports = __webpack_public_path__ + \"img/policy_fascist.60739294.jpg\";","import Route from './route';\n\nexport type UserID = number;\n\nexport type Member = {\n  userId: UserID\n  userName: string,\n  roleName?: Role,\n  isCreator?: boolean\n}\n\nexport type PusherMember = {\n  id: string,\n  info: {\n    isChannelCreator: boolean,\n    userName: string\n  }\n}\n\nexport type ChannelName = string;\n\nexport enum Role {\n  Hitler = 'secret hitler',\n  Fascist = 'fascist',\n  Liberal = 'liberal',\n}\n\nexport enum Policy {\n  Fascist = 'fascist',\n  Liberal = 'liberal',\n}\n\nexport enum Party {\n  Fascist = 'fascist',\n  Liberal = 'liberal',\n}\n\nexport type Vote = {\n  userId: UserID,\n  votedYes: boolean\n}\n\ntype Secret = {\n  electable: UserID[],\n  presidentPolicies: Policy[],\n  chancellorPolicies: Policy[],\n  policyPeek: Policy[],\n  vetoPossible: boolean\n}\n\nexport type Round = {\n  presidentId: UserID,\n  chancellorId: null | UserID,\n  chancellorElected: boolean,\n  enactedPolicy: false | Policy,\n  votes: Vote[],\n  secret: Secret\n}\n\nexport type GameState = {\n  token?: string,\n  userId?: UserID,\n  creatorId?: UserID,\n  channelName?: ChannelName,\n  roleName?: Role,\n  currentAction: Route,\n\n  activeRound: number,\n  electionTracker: number,\n  gameOver: false | {\n    party: Party,\n    reason: string\n  },\n\n  members: Member[],\n  connectedMembers: Member[],\n  partyMembers?: Member[],\n  rounds: Round[],\n  killed: UserID[],\n\n  running: boolean\n}\n\nexport type GameGetters = {\n  userId?: UserID,\n  token?: string,\n  channelName?: ChannelName,\n  members?: Member[],\n  partyMembers?: Member[],\n  rounds?: Round[],\n  roleName?: Role,\n  electionTracker?: number,\n\n  you?: Member,\n  creator?: Member,\n  isCreator?: boolean,\n  isElected?: boolean,\n  activeRound?: Round,\n  president?: Member,\n  chancellor?: Member,\n}\n\nexport type StoreRootState = {};\n","import Route from '@/types/route';\nimport router from '@/router';\nimport store from '@/store';\nimport { mutations } from '@/store/game';\n\nconst availableWhenDead = [\n  Route.GameIsKilled,\n  Route.GameWon,\n  Route.GameInfo,\n];\n\nexport default function (route: Route) {\n  // If the current player is dead, we don't want to redirect to the action,\n  // unless the game is over, or he wants to see the info screen.\n  if (store.getters.isDead && !availableWhenDead.includes(route)) {\n    return;\n  }\n\n  router.push({ name: route, params: { id: store.getters.channelName } });\n\n  store.commit(mutations.SET_CURRENT_ACTION, route);\n}\n"],"sourceRoot":""}